1. check for what is a linked llist and how to create it
2. check on what is a doubly linked list and how to use it
3. check what is a node and how to go from one node to another
4. struct used to create a linked list and compare the three linked list types 1. singular 2.doubly
																			   3. circular

check these basic linked list operations and who its created and try to recreate it from the
libft file:
(a. Traversal - access each element of the linked list
b. Insertion - adds a new element to the linked list
c. Deletion - removes the existing elements
d. Search - find a node in the linked list
e. Sort - sort the nodes of the linked list)

6. create 2 stack (linked lists) for implementation
7. and create the operation from the push_swap document using the created  linked list



:) Good luck

website:
1. https://www.youtube.com/watch?v=-gpsiMiEOHU

2. https://www.geeksforgeeks.org/what-is-linked-list/

3. https://www.programiz.com/dsa/linked-list-operations

4. https://www.geeksforgeeks.org/doubly-linked-list/

5. https://www.programiz.com/dsa/doubly-linked-list

Test cases for int main()
{
	** test sa operation
	printf("before\n");
	ft_lstdisplay(lst);
	sa(lst);
	printf("after\n");
	ft_lstdisplay(lst);

	** test ra operation
	printf("before:\n");
	ft_lstdisplay(lst);
	ra(lst);
	printf("after:\n");
	ft_lstdisplay(lst);

	** test rra operation
	printf("before:\n");
	ft_lstdisplay(lst);
	rra(lst);
	printf("after:\n");
	ft_lstdisplay(lst);

	** sort three numbers
	printf("sort 3 output:\n");
	sort_three(lst);
	ft_lstdisplay(lst);

	** test pb operation
	printf("------------first-----------\n");
	pb(&lst, &lst2);
	printf("lst 1 -> \n");
	ft_lstdisplay(lst);
	printf("lst 2 -> \n");
	ft_lstdisplay(lst2);
	printf("------------second-----------\n");
	pb(&lst, &lst2);
	printf("lst 1 -> \n");
	ft_lstdisplay(lst);
	printf("lst 2 -> \n");
	ft_lstdisplay(lst2);

_____________________________________________________

	** test sb operation
	printf("before\n");
	ft_lstdisplay(lst);
	sb(lst);
	printf("after\n");
	ft_lstdisplay(lst);

	** test rb operation
	printf("before\n");
	ft_lstdisplay(lst2);
	sb(lst2);
	printf("after\n");
	ft_lstdisplay(lst2);

	** test rra operation
	printf("before:\n");
	ft_lstdisplay(lst2);
	rrb(lst2);
	printf("after:\n");
	ft_lstdisplay(lst2);

	** sort three numbers
	printf("sort 3 output:\n");
	sort_three(lst2);
	ft_lstdisplay(lst2);
	** use ./a.out 4 2 3 1

}
